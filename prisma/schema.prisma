generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int     @id @default(autoincrement())
  nickname String
  picture  String?
  email    String  @unique
  password String

  posts       Post[]
  comments    Comment[]
  likePost    LikePost[]
  likeComment LikeComment[]
  followedBy  Follows[]     @relation("following")
  following   Follows[]     @relation("follower")

  updatedAt DateTime @updatedAt
  createdAt DateTime @default(now())
}

model Post {
  id      Int     @id @default(autoincrement())
  title   String
  content String
  image   String
  price   Float
  company String?
  temp    Int     @default(0)
  link    String
  expired Boolean @default(false)

  user   User @relation(fields: [userId], references: [id])
  userId Int

  category   Category @relation(fields: [categoryId], references: [id])
  categoryId Int

  comments Comment[]
  like     LikePost[]

  updatedAt DateTime @updatedAt
  createdAt DateTime @default(now())
}

model Comment {
  id      Int    @id @default(autoincrement())
  content String
  likes   Int    @default(0)
  ref     Int?

  user   User @relation(fields: [userId], references: [id])
  userId Int

  post   Post @relation(fields: [postId], references: [id])
  postId Int

  like LikeComment[]

  createdAt DateTime @default(now())
}

model Category {
  id   Int    @id @default(autoincrement())
  name String

  post Post[]

  createdAt DateTime @default(now())
}

model Token {
  email String @unique
  hash  String @unique

  createdAt DateTime @default(now())
}

model LikePost {
  post   Post    @relation(fields: [postId], references: [id])
  postId Int
  user   User    @relation(fields: [userId], references: [id])
  userId Int
  type   Boolean

  createdAt DateTime @default(now())

  @@id([postId, userId])
}

model LikeComment {
  comment   Comment @relation(fields: [commentId], references: [id])
  commentId Int

  user   User @relation(fields: [userId], references: [id])
  userId Int

  createdAt DateTime @default(now())

  @@id([commentId, userId])
}

model Follows {
  follower   User @relation("follower", fields: [followerId], references: [id])
  followerId Int

  following   User @relation("following", fields: [followingId], references: [id])
  followingId Int

  createdAt DateTime @default(now())

  @@id([followerId, followingId])
}
